{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "TTDS Movie Search API"
  },
  "paths": {
    "/query_search": {
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Endpoint for querying words in sentences",
        "description": "A regular query would run a BM25 ranking algorithm. If the whole query is wrapped in double quotation marks (\"), then the query would run a phrase search algorithm that returns sentences containing the exact matching phrase, and sentences will be ordered by popularity (from most to least popular).",
        "requestBody": {
          "description": "Request body object for specifying query parameters, including a query string (required) and (optional) movie title, actor, keywords and/or year.",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query_params"
                }
              }
            }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query_search_response"
                }
              }
            }
          }
        }
      }
    },
    "/movie_search": {
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Endpoint for querying words in movies",
        "description": "A query will run a TFIDF ranking algorithm on movies. Phrase search is not supported on a movie level. For phrase search, use endpoint /query_search",
        "requestBody": {
          "description": "Request body object for specifying query parameters, including a query string (required) and (optional) movie title, actor, keywords and/or year.",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query_params"
                }
              }
            }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movie_search_response"
                }
              }
            }
          }
        }
      }
    },
    "/movie/{movie_id}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Endpoint for getting a movie by iMDB ID",
        "description": "A query will return full movie information (JSON) by iMDB ID if such movie exists. Otherwise it will return an HTTP 404 response with an empty JSON object.",
        "parameters": [{
          "in": "path",
          "name": "movie_id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "iMDB ID, e.g. 'tt1234567'"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movie"
                }
              }
            }
          },
          "404": {
            "description": "Movie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {

                  }
                }
              }
            }
          }
        }
      }
    },
    "/query_suggest": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Endpoint for suggesting next words for a query",
        "description": "A query accepts one parameter: a query a user has entered so far. The response will contain a list of up to 3 suggestions. The dropdown should only appear if the list has at least one suggestion.",
        "parameters": [{
          "in": "query",
          "name": "query",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "User query completed so far, for example: 'I am'"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query_suggest_response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "query_params": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "movie_title": {
            "type": "string"
          },
          "categories": {
            "type": "string"
          },
          "actor": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "year": {
            "type": "string"
          }
        }
      },
      "movie": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "movie_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "year": {
            "type": "number",
            "format": "integer"
          },
          "rating": {
            "type": "number",
            "format": "float"
          },
          "countOfRatings": {
            "type": "number",
            "format": "integer"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "thumbnail": {
            "type": "string"
          },
          "cast": {
            "$ref": "#/components/schemas/cast_info"
          },
          "plotKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "movie_minimised_for_list": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "movie_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "thumbnail": {
            "type": "string"
          }
        }
      },
      "movie_quote_combined": {
        "type": "object",
        "properties": {
          "movie_id": {
            "type": "string"
          },
          "quote_id": {
            "type": "string"
          },
          "time_ms": {
            "type": "number",
            "format": "integer"
          },
          "full_quote": {
            "type": "string"
          },
          "character": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "thumbnail": {
            "type": "string"
          }
        }
      },
      "movies": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/movie_minimised_for_list"
        }
      },
      "query_search_response": {
        "type": "object",
        "properties": {
          "movies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/movie_quote_combined"
            }
          },
          "category_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "query_time": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "movie_search_response": {
        "type": "object",
        "properties": {
          "movies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/movie_minimised_for_list"
            }
          },
          "category_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "query_time": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "inverted_index_entry": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "doc_count": {
            "type": "string"
          },
          "movies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "doc_count": {
                  "type": "number",
                  "format": "integer"
                },
                "sentences": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "number",
                        "format": "integer"
                      },
                      "len": {
                        "type": "number",
                        "format": "integer"
                      },
                      "pos": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "query_suggest_response": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "cast_info": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "actor": {
              "type": "string"
            },
            "character": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
